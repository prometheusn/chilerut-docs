import{_ as n,c as a,o as s,a as e}from"./app.7838664d.js";const h='{"title":"Funciones","description":"","frontmatter":{},"headers":[{"level":2,"title":"Validaci\xF3n","slug":"validacion"},{"level":3,"title":"validateRut()","slug":"validaterut"},{"level":2,"title":"Formato","slug":"formato"},{"level":3,"title":"formatRut()","slug":"formatrut"},{"level":2,"title":"Sanitizaci\xF3n","slug":"sanitizacion"},{"level":3,"title":"sanitiseRut()","slug":"sanitiserut"},{"level":3,"title":"fullySanitiseRut()","slug":"fullysanitiserut"},{"level":2,"title":"Generaci\xF3n","slug":"generacion"},{"level":3,"title":"generateRut()","slug":"generaterut"},{"level":3,"title":"generateMulRut()","slug":"generatemulrut"},{"level":2,"title":"D\xEDgito de verificaci\xF3n","slug":"digito-de-verificacion"},{"level":3,"title":"getCheckDigit()","slug":"getcheckdigit"}],"relativePath":"funciones/index.md","lastUpdated":1648582585000}',t={},o=e(`<h1 id="funciones" tabindex="-1">Funciones <a class="header-anchor" href="#funciones" aria-hidden="true">#</a></h1><h2 id="validacion" tabindex="-1">Validaci\xF3n <a class="header-anchor" href="#validacion" aria-hidden="true">#</a></h2><h3 id="validaterut" tabindex="-1">validateRut() <a class="header-anchor" href="#validaterut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>validateRut(</strong>) devuelve un valor booleano de acuerdo al RUT proporcionado.</p><p>Verifica el <a href="/chilerut-docs/conceptos/formato.html">formato</a> y el d\xEDgito verificador. Si estos son v\xE1lidos, devuelve <strong>true</strong>, en el caso contrario <strong>false</strong>.</p><div class="language-javascript"><pre><code><span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;10-8&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;12.348-K&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;260.222-9&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;1.091.397-7&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;13.537.201-3&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">validateRut</span><span class="token punctuation">(</span><span class="token string">&quot;111.111.111-1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h2 id="formato" tabindex="-1">Formato <a class="header-anchor" href="#formato" aria-hidden="true">#</a></h2><h3 id="formatrut" tabindex="-1">formatRut() <a class="header-anchor" href="#formatrut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>formatRut()</strong> devuelve un RUT de acuerdo al <a href="/chilerut-docs/conceptos/formato.html">formato</a>.</p><div class="language-javascript"><pre><code><span class="token function">formatRut</span><span class="token punctuation">(</span><span class="token string">&quot;11111111&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 1.111.111-1</span>
<span class="token function">formatRut</span><span class="token punctuation">(</span><span class="token string">&quot;111111111&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 11.111.111-1</span>
</code></pre></div><h2 id="sanitizacion" tabindex="-1">Sanitizaci\xF3n <a class="header-anchor" href="#sanitizacion" aria-hidden="true">#</a></h2><p>Puedes sanitizar un RUT de dos maneras:</p><h3 id="sanitiserut" tabindex="-1">sanitiseRut() <a class="header-anchor" href="#sanitiserut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>sanitiseRut()</strong> devuelve un RUT sin formato. Mantiene solo n\xFAmeros y el car\xE1cter &quot;K/k&quot;.</p><div class="language-javascript"><pre><code><span class="token function">sanitiseRut</span><span class="token punctuation">(</span><span class="token string">&quot;11.111.111-1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 111111111</span>
<span class="token function">sanitiseRut</span><span class="token punctuation">(</span><span class="token string">&quot;19.997.050-K&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 19997050K</span>
</code></pre></div><h3 id="fullysanitiserut" tabindex="-1">fullySanitiseRut() <a class="header-anchor" href="#fullysanitiserut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>fullySanitiseRut()</strong> devuelve un RUT sin formato. Mantiene solo n\xFAmeros.</p><div class="language-javascript"><pre><code><span class="token function">fullySanitiseRut</span><span class="token punctuation">(</span><span class="token string">&quot;11.111.111-1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 111111111</span>
<span class="token function">fullySanitiseRut</span><span class="token punctuation">(</span><span class="token string">&quot;19.997.050-K&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 19997050</span>
</code></pre></div><h2 id="generacion" tabindex="-1">Generaci\xF3n <a class="header-anchor" href="#generacion" aria-hidden="true">#</a></h2><p>Puedes generar RUTs aleatorios de manera individual o masiva. Para opciones de formato, puedes pasar un objeto <strong>genOpts</strong> a la funci\xF3n.</p><h3 id="generaterut" tabindex="-1">generateRut() <a class="header-anchor" href="#generaterut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>generateRut()</strong> devuelve un RUT aleatorio y v\xE1lido. Toma un objeto opcional, el cual determina si el RUT se retorna con separadores de miles y/o un gui\xF3n. Por defecto, estas opciones son verdaderas.</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> genOpts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">dots</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Si el RUT tendr\xE1 puntos como separador de miles.</span>
    <span class="token literal-property property">hyphen</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// Si el RUT tendr\xE1 un gui\xF3n entre el n\xFAmero correlativo y el d\xEDgito verificador.</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> rut <span class="token operator">=</span> <span class="token function">generateRut</span><span class="token punctuation">(</span>genOpts<span class="token punctuation">)</span> <span class="token comment">// string</span>
</code></pre></div><h3 id="generatemulrut" tabindex="-1">generateMulRut() <a class="header-anchor" href="#generatemulrut" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>generateMulRut()</strong> devuelve un array de RUTs aleatorios y v\xE1lidos.</p><p>Toma un objeto opcional, el cual determina la cantidad de RUTs a generar, y si estos retornan con separadores de miles y/o gui\xF3n.</p><p>Por defecto, la cantidad de RUTs a crear es 30 y las opciones de formato son verdaderas.</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> genOpts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// El n\xFAmero de RUTs a generar</span>
    <span class="token literal-property property">dots</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Si el RUT tendr\xE1 puntos como separador de miles.</span>
    <span class="token literal-property property">hyphen</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// Si el RUT tendr\xE1 un gui\xF3n entre el n\xFAmero correlativo y el d\xEDgito verificador.</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> ruts <span class="token operator">=</span> <span class="token function">generateMulRut</span><span class="token punctuation">(</span>genOpts<span class="token punctuation">)</span> <span class="token comment">// []string</span>
</code></pre></div><h2 id="digito-de-verificacion" tabindex="-1">D\xEDgito de verificaci\xF3n <a class="header-anchor" href="#digito-de-verificacion" aria-hidden="true">#</a></h2><h3 id="getcheckdigit" tabindex="-1">getCheckDigit() <a class="header-anchor" href="#getcheckdigit" aria-hidden="true">#</a></h3><p>La funci\xF3n <strong>getCheckDigit()</strong> devuelve el d\xEDgito verificador de un RUT. Un car\xE1cter calculado de acuerdo a un algoritmo basado en m\xF3dulo 11.</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> rut <span class="token operator">=</span> <span class="token string">&quot;11.111.111-1&quot;</span>
<span class="token keyword">const</span> rutToPass <span class="token operator">=</span> rut<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// No incluimos el \xFAltimo car\xE1cter</span>

<span class="token keyword">const</span> confirmedDigit <span class="token operator">=</span> <span class="token function">getCheckDigit</span><span class="token punctuation">(</span>rutToPass<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre></div>`,32),p=[o];function c(i,r,l,u,d,k){return s(),a("div",null,p)}var m=n(t,[["render",c]]);export{h as __pageData,m as default};
